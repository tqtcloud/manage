// Code generated by goctl. DO NOT EDIT!
// Source: host.proto

package server

import (
	"context"

	"github.com/tqtcloud/manage/service/provider/aliyun/host/rpc/internal/logic"
	"github.com/tqtcloud/manage/service/provider/aliyun/host/rpc/internal/svc"
	"github.com/tqtcloud/manage/service/provider/aliyun/host/rpc/types/host"
)

type HostServer struct {
	svcCtx *svc.ServiceContext
	host.UnimplementedHostServer
}

func NewHostServer(svcCtx *svc.ServiceContext) *HostServer {
	return &HostServer{
		svcCtx: svcCtx,
	}
}

func (s *HostServer) HostSync(ctx context.Context, in *host.CreateRequest) (*host.GetListResponse, error) {
	l := logic.NewHostSyncLogic(ctx, s.svcCtx)
	return l.HostSync(in)
}

func (s *HostServer) HostDelete(ctx context.Context, in *host.DeleteRequest) (*host.DeleteResponse, error) {
	l := logic.NewHostDeleteLogic(ctx, s.svcCtx)
	return l.HostDelete(in)
}

func (s *HostServer) HostUpdate(ctx context.Context, in *host.CreateRequest) (*host.CreateResponse, error) {
	l := logic.NewHostUpdateLogic(ctx, s.svcCtx)
	return l.HostUpdate(in)
}

func (s *HostServer) HostList(ctx context.Context, in *host.GetListRequest) (*host.GetListResponse, error) {
	l := logic.NewHostListLogic(ctx, s.svcCtx)
	return l.HostList(in)
}

func (s *HostServer) HostGetId(ctx context.Context, in *host.GetIdRequest) (*host.DeleteResponse, error) {
	l := logic.NewHostGetIdLogic(ctx, s.svcCtx)
	return l.HostGetId(in)
}
