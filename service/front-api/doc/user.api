syntax = "v1"

info(
	title: "用户服务"
	desc: "用户服务"
	author: "type author here"
	email: "type email here"
	version: "v1"
)

type (
	// 用户登录
	LoginRequest {
		Name     string `json:"name"`
		Password string `json:"password"`
	}
	LoginResponse {
		Name         string `json:"name"`
		Gender       int64  `json:"gender"`
		Mobile       string `json:"mobile"`
		Email        string `json:"email"`
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
	}

	// 用户注册
	RegisterRequest {
		Name     string `json:"name"`
		Gender   int64  `json:"gender"`
		Mobile   string `json:"mobile"`
		Password string `json:"password"`
		Email    string `json:"email"`
	}
	RegisterResponse {
		Id     int64  `json:"id"`
		Name   string `json:"name"`
		Gender int64  `json:"gender"`
		Mobile string `json:"mobile"`
		Email  string `json:"email"`
	}

	// 用户信息
	UserInfoResponse {
		Id     int64  `json:"id"`
		Name   string `json:"name"`
		Gender int64  `json:"gender"`
		Mobile string `json:"mobile"`
		Email  string `json:"email"`
	}

	UserListRequest {
		Page  int64 `form:"page"`
		Limit int64 `form:"limit"`
	}
	// 用户列表
	UserListResponse {
		Id     int64  `json:"id"`
		Name   string `json:"name"`
		Gender int64  `json:"gender"`
		Mobile string `json:"mobile"`
		Email  string `json:"email"`
	}
)
@server(
    group: user
	prefix: /user-api/v1
)
service front-api {
	@doc "登录用户"
	@handler Login
	post /login(LoginRequest) returns  (LoginResponse)
}

@server(
	jwt: Auth
	group: user
	prefix: /user-api/v1
)
service front-api {
	@doc "自身用户信息查询"
	@handler UserInfo
	post /userinfo returns (UserInfoResponse)
	@doc "分页用户"
	@handler UserList
	get /(UserListRequest) returns (UserListResponse)
	@doc "创建用户"
	@handler Register
	post /register(RegisterRequest) returns (RegisterResponse)
}