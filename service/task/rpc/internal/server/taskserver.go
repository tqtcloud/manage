// Code generated by goctl. DO NOT EDIT!
// Source: task.proto

package server

import (
	"context"

	"github.com/tqtcloud/manage/service/task/rpc/internal/logic"
	"github.com/tqtcloud/manage/service/task/rpc/internal/svc"
	"github.com/tqtcloud/manage/service/task/rpc/types/task"
)

type TaskServer struct {
	svcCtx *svc.ServiceContext
	task.UnimplementedTaskServer
}

func NewTaskServer(svcCtx *svc.ServiceContext) *TaskServer {
	return &TaskServer{
		svcCtx: svcCtx,
	}
}

func (s *TaskServer) TaskCreate(ctx context.Context, in *task.CreateRequest) (*task.CreateResponse, error) {
	l := logic.NewTaskCreateLogic(ctx, s.svcCtx)
	return l.TaskCreate(in)
}

func (s *TaskServer) TaskDelete(ctx context.Context, in *task.DeleteRequest) (*task.DeleteResponse, error) {
	l := logic.NewTaskDeleteLogic(ctx, s.svcCtx)
	return l.TaskDelete(in)
}

func (s *TaskServer) TaskList(ctx context.Context, in *task.GetListRequest) (*task.GetListResponse, error) {
	l := logic.NewTaskListLogic(ctx, s.svcCtx)
	return l.TaskList(in)
}

func (s *TaskServer) TaskGetId(ctx context.Context, in *task.GetIdRequest) (*task.DeleteResponse, error) {
	l := logic.NewTaskGetIdLogic(ctx, s.svcCtx)
	return l.TaskGetId(in)
}

func (s *TaskServer) TaskCallback(ctx context.Context, in *task.CallbackRequest) (*task.CallbackResponse, error) {
	l := logic.NewTaskCallbackLogic(ctx, s.svcCtx)
	return l.TaskCallback(in)
}
